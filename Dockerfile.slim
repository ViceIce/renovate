# Base image
#============
FROM renovate/yarn:1.17.3@sha256:08571fc2c7f5a213f25df2b10f393ff6ea296341129466ac661d228dbc1f92ca AS base

LABEL maintainer="Rhys Arkins <rhys@arkins.net>"
LABEL name="renovate"
LABEL org.opencontainers.image.source="https://github.com/renovatebot/renovate"

WORKDIR /usr/src/app/

# required for install
USER root

RUN chown -R ubuntu:ubuntu /usr/src/app/

# and back to normal
USER ubuntu

# Build image
#============
FROM base as tsbuild

USER root

# Python 2 and make are required to build node-re2

RUN apt-get update && apt-get install -y python-minimal build-essential

USER ubuntu

COPY package.json .
COPY yarn.lock .
RUN yarn install --frozen-lockfile

COPY lib lib
COPY tsconfig.json tsconfig.json
COPY tsconfig.app.json tsconfig.app.json

RUN yarn build:docker

# Prune node_modules to production-only so they can be copied into the final image

RUN yarn install --production --frozen-lockfile

# Final image
#============
FROM base as final


# required for install
USER root

# Podman
RUN echo "deb http://ppa.launchpad.net/projectatomic/ppa/ubuntu bionic main" > /etc/apt/sources.list.d/projectatomic-ubuntu-ppa-bionic.list \
  && apt-key adv --keyserver keyserver.ubuntu.com --recv 018ba5ad9df57a4448f0e6cf8becf1637ad8c79d \
  && apt-get update \
  && apt-get -y install podman \
  && rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/podman /usr/bin/docker \
  && echo "[registries.search]\n  registries = ['docker.io']" | tee /etc/containers/registries.conf

# and back to normal
USER ubuntu

# creating initial podman config to suppress event errors
RUN podman --events-backend=file info 2> /dev/null || echo \
  && sed -i '/^\s*crun =/ d' /home/ubuntu/.config/containers/libpod.conf

COPY package.json .

COPY --from=tsbuild /usr/src/app/dist dist
COPY --from=tsbuild /usr/src/app/node_modules node_modules
COPY bin bin
COPY data data

ENV RENOVATE_BINARY_SOURCE=docker

ENTRYPOINT ["node", "/usr/src/app/dist/renovate.js"]
CMD []
